# Generated by Django 3.2.19 on 2024-06-01 20:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ava_image', models.ImageField(default='avatars/default_avatar.png', upload_to='avatars/')),
                ('bin', models.CharField(max_length=12, verbose_name='БИН Компании')),
                ('name_company', models.CharField(max_length=255, verbose_name='Название Компании')),
                ('role', models.IntegerField(choices=[(1, 'Manager'), (2, 'Developer Junior'), (3, 'Developer Middle'), (4, 'Developer Senior'), (5, 'Developer Teamlead'), (6, 'Tester'), (7, 'Analyst'), (8, 'Main Analyst')], default=1)),
                ('data_joined_to_work', models.DateField(null=True)),
                ('country', models.CharField(max_length=30, null=True)),
                ('telegram', models.CharField(max_length=30, null=True)),
                ('city', models.CharField(max_length=30, null=True)),
                ('phone_number', models.CharField(max_length=30, null=True)),
                ('task_norm', models.IntegerField(default=0)),
                ('task_plan', models.IntegerField(default=0)),
                ('task_goal', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptions', models.TextField(verbose_name=' Описание компаний')),
                ('email', models.CharField(max_length=30, verbose_name='Электронная почта')),
                ('address', models.CharField(max_length=30, verbose_name=' Адрес')),
                ('contact_phone', models.CharField(max_length=30, verbose_name=' Контактные данные')),
                ('telegram', models.CharField(max_length=30, verbose_name='Телеграмм')),
                ('bin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
